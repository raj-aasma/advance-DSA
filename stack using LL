public class stackusingll{
 static class node{
  int data;
  node next;
  node(int data){
   this.data=data;
   this.next=null;
  }
 }
 static class stack{
  node head;
  int size;
  stack(){
   head=null;
   size=0;
  }
  public boolean isempty(){
   return head==null;
  }
  public void push(int data){
   node newnode=new node(data);
   newnode.next=head;
   head=newnode;
   size++;
  }
  public int pop(){
   if(isempty()){
    throw new RuntimeException("Stack Underflow");
   }
   int top=head.data;
   head=head.next;
   size--;
   return top;
  }
  public int peek(){
   if(isempty()){
    throw new RuntimeException("Stack is empty");
   }
   return head.data;
  }
  public int getsize(){
   return size;
  }
  public void display(){
   if(isempty()){
    System.out.println("Stack is empty");
    return;
   }
   node temp=head;
   System.out.print("Stack elements: ");
   while(temp!=null){
    System.out.print(temp.data+" ");
    temp=temp.next;
   }
   System.out.println();
  }
 }
 public static void main(String[] args){
  stack s=new stack();
  s.push(10);
  s.push(20);
  s.push(30);
  s.display();
  System.out.println("Top element: "+s.peek());
  System.out.println("Popped: "+s.pop());
  s.display();
  System.out.println("Stack size: "+s.getsize());
 }
}
